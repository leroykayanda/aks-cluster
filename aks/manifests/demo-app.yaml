apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: demo-app
  annotations:
    secret.reloader.stakater.com/reload: "demo-app"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: demo-app
      containers:
      - name: demo-app
        image: httpd
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 2
          failureThreshold: 2
        envFrom:
          - secretRef:
              name: demo-app
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: demo-app
  namespace: demo-app
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: demo-app
  target:
    name: demo-app
    creationPolicy: Owner
  dataFrom:
    - find:
        name:
          regexp: ".*"
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: demo-app
  namespace: demo-app
spec:
  provider:
    azurekv:
      authType: WorkloadIdentity
      vaultUrl: "https://dev-demo-app.vault.azure.net/"
      serviceAccountRef:
        name: demo-app
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app
  namespace: demo-app
spec:
  selector:
    app: demo-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-cert
  namespace: demo-app
type: kubernetes.io/tls
stringData:
  tls.key: ""
  tls.crt: ""
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-app
  namespace: demo-app
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/health-probe-unhealthy-threshold: "2"
    appgw.ingress.kubernetes.io/request-timeout: "60"
    appgw.ingress.kubernetes.io/ssl-redirect: "true"  
    cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  tls:
  - hosts:
    - demo-app.azure.rentrahisi.co.ke
    secretName: tls-cert
  rules:
  - host: demo-app.azure.rentrahisi.co.ke
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: demo-app
            port:
              number: 80

